{"metadata":{"title":"Setting up RemodelAR in SwiftUI","categoryPathComponent":"RemodelARSwiftUI","role":"project","category":"RemodelAR - SwiftUI"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelARSwiftUI\/RemodelAR-Essentials","projects":[{"reference":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI","sections":[{"kind":"task","reference":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Create-a-new-project-and-add-RemodelAR.xcframework"},{"kind":"task","reference":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Add-a-Color-Picker"},{"kind":"task","reference":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Add-Export-Features"},{"kind":"task","reference":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Add-Textured-Paints"}]}]}],"reference":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelARSwiftUI","paths":[["doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelARSwiftUI","doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelARSwiftUI\/$volume","doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelARSwiftUI\/RemodelAR-Essentials"]]},"schemaVersion":{"major":0,"minor":1,"patch":0},"kind":"project","identifier":{"url":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI","interfaceLanguage":"swift"},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Painty"}]},{"type":"text","text":" — an app for visualizing paint on real walls."}]}],"estimatedTimeInMinutes":10,"title":"Setting up RemodelAR in SwiftUI","image":"Painty-SwiftUI-Banner.png","chapter":"RemodelAR Essentials","kind":"hero","backgroundImage":"Painty-SwiftUI-Banner.png"},{"kind":"tasks","tasks":[{"anchor":"Create-a-new-project-and-add-RemodelAR.xcframework","title":"Create a new project and add RemodelAR.xcframework","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create and configure an Xcode project that uses RemodelAR."}]}],"mediaPosition":"trailing","media":"Painty-Basic-Final.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new project using the iOS App template."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"swiftui-image-1.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Enter “Painty” as the Product Name. Select “SwiftUI” from the Interface pop-up menu then click Next."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"swiftui-image-2.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose a location to save the Painty project on your Mac."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"swiftui-image-3.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the Targets->Painty->General tab. Scroll down to the “Frameworks, Libraries, and Embedded Content” section and click on the Add Items button."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"swiftui-image-5.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on “Add Other…”, then “Add Files…”. Navigate to and select the RemodelAR.xcframework file and click Add."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"swiftui-image-6.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the Targets->Painty->Info tab. Add a new entry for the “Privacy - Camera Usage Description” key. Give it a description."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"swiftui-image-8.png"},{"code":"swiftui-code-1.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open ContentView.swift and you’ll see the default Hello World code."}]}],"caption":[],"type":"step","runtimePreview":"Painty-HelloWorld.png","media":null},{"code":"swiftui-code-2.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import the RemodelAR library."}]}],"caption":[],"type":"step","runtimePreview":"Painty-HelloWorld.png","media":null},{"code":"swiftui-code-3.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the required ARStateModel @ObservedObject."}]}],"caption":[],"type":"step","runtimePreview":"Painty-HelloWorld.png","media":null},{"code":"swiftui-code-4.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create an extension to ContentView and create a variable for the ARView object."}]}],"caption":[],"type":"step","runtimePreview":"Painty-HelloWorld.png","media":null},{"code":"swiftui-code-5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the arView object to the view body."}]}],"caption":[],"type":"step","runtimePreview":"Painty-Start.png","media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build and run your project. You will see the walls start to be covered with a mesh. Tap on a mesh and it will be colored."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"Painty-Basic-Final.png"}]},{"anchor":"Add-a-Color-Picker","title":"Add a Color Picker","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a color picker that will allow the you to pick which color to paint the walls with."}]}],"mediaPosition":"trailing","media":"Painty-ColorPicker-Final.png"}],"stepsSection":[{"code":"swiftui-code-5.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start with the code from “Create a new project and add PaintAR”."}]}],"caption":[],"type":"step","runtimePreview":"Painty-Start.png","media":null},{"code":"swiftui-code-6.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a variable to the extension that provides an array of Color objects."}]}],"caption":[],"type":"step","runtimePreview":"Painty-Start.png","media":null},{"code":"swiftui-code-7.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create the required @State variables."}]}],"caption":[],"type":"step","runtimePreview":"Painty-Start.png","media":null},{"code":"swiftui-code-8.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a variable to the extension that creates a color picker view"}]}],"caption":[],"type":"step","runtimePreview":"Painty-Start.png","media":null},{"code":"swiftui-code-9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modify the view body to add the newly created colorPicker view."}]}],"caption":[],"type":"step","runtimePreview":"Painty-ColorPicker.png","media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build and run your project. You will see a color picker has been added to the view. Scroll through the color picker and select different colors before tapping on the walls. You should be able to paint walls different colors now."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"Painty-ColorPicker-Final.png"}]},{"anchor":"Add-Export-Features","title":"Add Export Features","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add controls to enable the export features of RemodelAR."}]}],"mediaPosition":"trailing","media":"Painty-Debug-Final.png"}],"stepsSection":[{"code":"swiftui-code-9.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start with the code from “Add a Color Picker”."}]}],"caption":[],"type":"step","runtimePreview":"Painty-ColorPicker.png","media":null},{"code":"swiftui-code-14.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a Save Photo Button view variable to save scene images."}]}],"caption":[],"type":"step","runtimePreview":"Painty-ColorPicker.png","media":null},{"code":"swiftui-code-15.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a Save 3D Model Button view variable to save the 3D model of the scene."}]}],"caption":[],"type":"step","runtimePreview":"Painty-ColorPicker.png","media":null},{"code":"swiftui-code-16.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"While we’re at it, let’s also add a reset button to reset the painting experience."}]}],"caption":[],"type":"step","runtimePreview":"Painty-ColorPicker.png","media":null},{"code":"swiftui-code-18.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the Save Photo, Save 3D Model, and Reset buttons to an HStack before the colorPicker."}]}],"caption":[],"type":"step","runtimePreview":"swiftui-image-13.png","media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to the Project->Painty->Info tab. Add a new entry for the “Privacy - Photo Library Usage Description” key. Give it a description."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"swiftui-image-16.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build and run your project. You will see your new controls have been added. Touch a wall to paint it. Try saving a picture and a mesh of your room."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"Painty-Debug-Final.png"}]},{"anchor":"Add-Textured-Paints","title":"Add Textured Paints","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add controls to enable the textured paint feature of RemodelAR."}]}],"mediaPosition":"trailing","media":"Painty-TexturePicker-Final.png"}],"stepsSection":[{"code":"swiftui-code-21.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start with the code from “Add Export Features”."}]}],"caption":[],"type":"step","runtimePreview":"swiftui-image-13.png","media":null},{"code":"swiftui-code-22.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create the required @State variables."}]}],"caption":[],"type":"step","runtimePreview":"swiftui-image-13.png","media":null},{"code":"swiftui-code-23.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new extension to the ContentView. Add a variable to return an array of texture images."}]}],"caption":[],"type":"step","runtimePreview":"swiftui-image-13.png","media":null},{"code":"swiftui-code-24.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a variable to the extension that creates a texture picker view"}]}],"caption":[],"type":"step","runtimePreview":"swiftui-image-13.png","media":null},{"code":"swiftui-code-25.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Modify the view body to add the newly created texturePicker view."}]}],"caption":[],"type":"step","runtimePreview":"Painty-TexturePicker.png","media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Build and run your project. You will see a texture picker has been added to the view. Scroll through the texture picker and select different textures before tapping on the walls. You should be able to paint walls with different textures now. To remove a texture from a wall, tap the selected texture to deselect it, then tap on the wall to paint without a texture."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"Painty-TexturePicker-Final.png"}]}]}],"references":{"swiftui-code-3.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    var body: some View {","        Text(\"Hello, world!\")","            .padding()","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-3.swift","type":"file","fileType":"swift","highlights":[{"line":12},{"line":13}]},"doc://com.passio.RemodelAR/tutorials/RemodelARSwiftUI":{"role":"overview","title":"Meet RemodelAR (SwiftUI)","abstract":[{"type":"text","text":"Visualize virtual paint on real walls. Get started with RemodelAR by building the demo app "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Painty"}]},{"type":"text","text":"."}],"identifier":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelARSwiftUI","kind":"overview","type":"topic","url":"\/tutorials\/remodelarswiftui"},"swiftui-code-14.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                colorPicker","                    .padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-14.swift","type":"file","fileType":"swift","highlights":[{"line":89},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94},{"line":95},{"line":96},{"line":97},{"line":98},{"line":99},{"line":100},{"line":101},{"line":102}]},"Painty-Basic-Final.png":{"alt":"A final screenshot of the basic PaintAR library implementation.","type":"image","identifier":"Painty-Basic-Final.png","variants":[{"url":"\/images\/Painty-Basic-Final.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"Painty-Debug-Final.png":{"alt":"A screenshot of the app with the export views added.","type":"image","identifier":"Painty-Debug-Final.png","variants":[{"url":"\/images\/Painty-Debug-Final.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"swiftui-code-4.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    var body: some View {","        Text(\"Hello, world!\")","            .padding()","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-4.swift","type":"file","fileType":"swift","highlights":[{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25}]},"doc://com.passio.RemodelAR/tutorials/RemodelAR/RemodelARSetupSwiftUI#Add-Export-Features":{"role":"pseudoSymbol","title":"Add Export Features","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Painty"}]},{"type":"text","text":" — an app for visualizing paint on real walls."}],"identifier":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Add-Export-Features","kind":"section","type":"section","url":"\/tutorials\/remodelar\/remodelarsetupswiftui#Add-Export-Features"},"swiftui-code-25.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","    @State private var textureIndex = -1","    @State private var showTextureStroke = false","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                VStack {","                    Spacer()","                    HStack {","                        savePhotoButton","                        save3DModelButton","                        resetSceneButton","                    }","                    VStack(spacing: 0) {","                        texturePicker","                            .offset(y: 20)","                        colorPicker","                    }.padding(.bottom, 30)","                }.padding(.bottom, -20)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","    ","    var resetSceneButton: some View {","        Button(action: {","            model.resetScene()","        }, label: {","            Image(\"reset\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","private extension ContentView {","    var textureNames: [String] {","        [","            \"chalk\",","            \"concrete\",","            \"concreteLines\",","            \"corium\",","            \"ebdaa\",","            \"elora\",","            \"glostex\",","            \"graniteArenal\",","            \"khayalBeauty010\",","            \"linetex\",","            \"marmo\",","            \"marotex\",","            \"mashasco\",","            \"newtex\",","            \"rawa\",","            \"rawaKothban\",","            \"said\",","            \"texture\",","            \"tourmaline\",","            \"worood\"","        ]","    }","    ","    var textureImages: [UIImage] {","        textureNames.compactMap({ UIImage(named: $0) })","    }","    ","    var texturePicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<textureImages.count) { i in","                    Button(action: {","                        if i == textureIndex {","                            showTextureStroke = false","                            textureIndex = -1","                            model.pickTexture(texture: nil)","                        } else {","                            showTextureStroke = true","                            textureIndex = i","                            model.pickTexture(texture: textureImages[i])","                        }","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showTextureStroke && i == textureIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Image(uiImage: textureImages[i]))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showTextureStroke.toggle()","                    }","                }","            }","            .padding()","        }","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-25.swift","type":"file","fileType":"swift","highlights":[{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36}]},"swiftui-code-7.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        arView","            .edgesIgnoringSafeArea(.all)","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}",""],"fileName":"ContentView.swift","identifier":"swiftui-code-7.swift","type":"file","fileType":"swift","highlights":[{"line":14},{"line":15},{"line":16}]},"swiftui-code-5.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    var body: some View {","        arView","            .edgesIgnoringSafeArea(.all)","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-5.swift","type":"file","fileType":"swift","highlights":[]},"doc://com.passio.RemodelAR/tutorials/RemodelAR/RemodelARSetupSwiftUI":{"role":"project","title":"Setting up RemodelAR in SwiftUI","estimatedTime":"10min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Painty"}]},{"type":"text","text":" — an app for visualizing paint on real walls."}],"identifier":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI","kind":"project","type":"topic","url":"\/tutorials\/remodelar\/remodelarsetupswiftui"},"swiftui-code-18.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                VStack {","                    Spacer()","                    HStack {","                        savePhotoButton","                        save3DModelButton","                        resetSceneButton","                    }","                    colorPicker","                }.padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","    ","    var resetSceneButton: some View {","        Button(action: {","            model.resetScene()","        }, label: {","            Image(\"reset\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-18.swift","type":"file","fileType":"swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30}]},"swiftui-image-6.png":{"alt":"A screenshot shows the Choose frameworks and libraries to add dialog.","type":"image","identifier":"swiftui-image-6.png","variants":[{"url":"\/images\/swiftui-image-6.png","size":{"width":402,"height":497},"traits":["1x","light"]}]},"Painty-TexturePicker.png":{"alt":"A screenshot from the Xcode preview as it would appear on iPhone. The view will show the texture picker.","type":"image","identifier":"Painty-TexturePicker.png","variants":[{"url":"\/images\/Painty-TexturePicker.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"Painty-HelloWorld.png":{"alt":"A screenshot from the Xcode preview as it would appear on iPhone, with the text, Hello, World!, centered in the middle of the display.","type":"image","identifier":"Painty-HelloWorld.png","variants":[{"url":"\/images\/Painty-HelloWorld.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"Painty-Start.png":{"alt":"A screenshot from the Xcode preview as it would appear on iPhone. The view will be blank since the AR view has nothing to display.","type":"image","identifier":"Painty-Start.png","variants":[{"url":"\/images\/Painty-Start.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"swiftui-image-1.png":{"alt":"A screenshot of the template selector in Xcode. In the top row, iOS is selected as the platform. In the Application section, App is selected as the template; there's a highlight placed over the Next button at the lower-right of the sheet.","type":"image","identifier":"swiftui-image-1.png","variants":[{"url":"\/images\/swiftui-image-1.png","size":{"width":732,"height":523},"traits":["1x","light"]}]},"swiftui-code-24.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","    @State private var textureIndex = -1","    @State private var showTextureStroke = false","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                VStack {","                    Spacer()","                    HStack {","                        savePhotoButton","                        save3DModelButton","                        resetSceneButton","                    }","                    colorPicker","                }.padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","    ","    var resetSceneButton: some View {","        Button(action: {","            model.resetScene()","        }, label: {","            Image(\"reset\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","private extension ContentView {","    var textureNames: [String] {","        [","            \"chalk\",","            \"concrete\",","            \"concreteLines\",","            \"corium\",","            \"ebdaa\",","            \"elora\",","            \"glostex\",","            \"graniteArenal\",","            \"khayalBeauty010\",","            \"linetex\",","            \"marmo\",","            \"marotex\",","            \"mashasco\",","            \"newtex\",","            \"rawa\",","            \"rawaKothban\",","            \"said\",","            \"texture\",","            \"tourmaline\",","            \"worood\"","        ]","    }","    ","    var textureImages: [UIImage] {","        textureNames.compactMap({ UIImage(named: $0) })","    }","    ","    var texturePicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<textureImages.count) { i in","                    Button(action: {","                        if i == textureIndex {","                            showTextureStroke = false","                            textureIndex = -1","                            model.pickTexture(texture: nil)","                        } else {","                            showTextureStroke = true","                            textureIndex = i","                            model.pickTexture(texture: textureImages[i])","                        }","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showTextureStroke && i == textureIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Image(uiImage: textureImages[i]))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showTextureStroke.toggle()","                    }","                }","            }","            .padding()","        }","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-24.swift","type":"file","fileType":"swift","highlights":[{"line":165},{"line":166},{"line":167},{"line":168},{"line":169},{"line":170},{"line":171},{"line":172},{"line":173},{"line":174},{"line":175},{"line":176},{"line":177},{"line":178},{"line":179},{"line":180},{"line":181},{"line":182},{"line":183},{"line":184},{"line":185},{"line":186},{"line":187},{"line":188},{"line":189},{"line":190},{"line":191},{"line":192},{"line":193},{"line":194},{"line":195},{"line":196}]},"swiftui-code-15.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                colorPicker","                    .padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-15.swift","type":"file","fileType":"swift","highlights":[{"line":101},{"line":102},{"line":103},{"line":104},{"line":105},{"line":106},{"line":107},{"line":108},{"line":109},{"line":110},{"line":111},{"line":112}]},"swiftui-code-2.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    var body: some View {","        Text(\"Hello, world!\")","            .padding()","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-2.swift","type":"file","fileType":"swift","highlights":[{"line":8}]},"swiftui-image-16.png":{"alt":"A screenshot shows the Custom iOS Target Properties section with a new entry for Privacy - Photo Library Usage Description selected.","type":"image","identifier":"swiftui-image-16.png","variants":[{"url":"\/images\/swiftui-image-16.png","size":{"width":826,"height":333},"traits":["1x","light"]}]},"swiftui-image-5.png":{"alt":"A screenshot shows the Frameworks and Libraries section of the Painty target.","type":"image","identifier":"swiftui-image-5.png","variants":[{"url":"\/images\/swiftui-image-5.png","size":{"width":1402,"height":901},"traits":["1x","light"]}]},"swiftui-code-16.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                colorPicker","                    .padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","    ","    var resetSceneButton: some View {","        Button(action: {","            model.resetScene()","        }, label: {","            Image(\"reset\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-16.swift","type":"file","fileType":"swift","highlights":[{"line":113},{"line":114},{"line":115},{"line":116},{"line":117},{"line":118},{"line":119},{"line":120},{"line":121},{"line":122},{"line":123},{"line":124}]},"swiftui-image-8.png":{"alt":"A screenshot shows the Custom iOS Target Properties section with a new entry for Privacy - Camera Usage Description selected.","type":"image","identifier":"swiftui-image-8.png","variants":[{"url":"\/images\/swiftui-image-8.png","size":{"width":1402,"height":903},"traits":["1x","light"]}]},"Painty-ColorPicker-Final.png":{"alt":"A screenshot of the app with the paint picker added.","type":"image","identifier":"Painty-ColorPicker-Final.png","variants":[{"url":"\/images\/Painty-ColorPicker-Final.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"Painty-TexturePicker-Final.png":{"alt":"A screenshot of the app with the texture picker added.","type":"image","identifier":"Painty-TexturePicker-Final.png","variants":[{"url":"\/images\/Painty-TexturePicker-Final.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"swiftui-code-6.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    var body: some View {","        arView","            .edgesIgnoringSafeArea(.all)","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}",""],"fileName":"ContentView.swift","identifier":"swiftui-code-6.swift","type":"file","fileType":"swift","highlights":[{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":56}]},"Painty-ColorPicker.png":{"alt":"A screenshot from the Xcode preview as it would appear on iPhone. The view will show the color picker.","type":"image","identifier":"Painty-ColorPicker.png","variants":[{"url":"\/images\/Painty-ColorPicker.png","size":{"width":428,"height":926},"traits":["1x","light"]}]},"swiftui-code-21.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                VStack {","                    Spacer()","                    HStack {","                        savePhotoButton","                        save3DModelButton","                        resetSceneButton","                    }","                    colorPicker","                }.padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","    ","    var resetSceneButton: some View {","        Button(action: {","            model.resetScene()","        }, label: {","            Image(\"reset\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-21.swift","type":"file","fileType":"swift","highlights":[]},"swiftui-code-9.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                colorPicker","                    .padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}",""],"fileName":"ContentView.swift","identifier":"swiftui-code-9.swift","type":"file","fileType":"swift","highlights":[]},"swiftui-code-22.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","    @State private var textureIndex = -1","    @State private var showTextureStroke = false","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                VStack {","                    Spacer()","                    HStack {","                        savePhotoButton","                        save3DModelButton","                        resetSceneButton","                    }","                    colorPicker","                }.padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","    ","    var resetSceneButton: some View {","        Button(action: {","            model.resetScene()","        }, label: {","            Image(\"reset\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-22.swift","type":"file","fileType":"swift","highlights":[{"line":16},{"line":17}]},"swiftui-code-8.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","","    var body: some View {","        arView","            .edgesIgnoringSafeArea(.all)","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}",""],"fileName":"ContentView.swift","identifier":"swiftui-code-8.swift","type":"file","fileType":"swift","highlights":[{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77}]},"swiftui-code-1.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import SwiftUI","","struct ContentView: View {","    var body: some View {","        Text(\"Hello, world!\")","            .padding()","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-1.swift","type":"file","fileType":"swift","highlights":[]},"doc://com.passio.RemodelAR/tutorials/RemodelAR/RemodelARSetupSwiftUI#Add-Textured-Paints":{"role":"pseudoSymbol","title":"Add Textured Paints","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Painty"}]},{"type":"text","text":" — an app for visualizing paint on real walls."}],"identifier":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Add-Textured-Paints","kind":"section","type":"section","url":"\/tutorials\/remodelar\/remodelarsetupswiftui#Add-Textured-Paints"},"swiftui-image-3.png":{"alt":"A screenshot of the file manager window. Create Git repository on my Mac is selected and Create is highlighted.","type":"image","identifier":"swiftui-image-3.png","variants":[{"url":"\/images\/swiftui-image-3.png","size":{"width":816,"height":715},"traits":["1x","light"]}]},"doc://com.passio.RemodelAR/tutorials/RemodelAR/RemodelARSetupSwiftUI#Add-a-Color-Picker":{"role":"pseudoSymbol","title":"Add a Color Picker","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Painty"}]},{"type":"text","text":" — an app for visualizing paint on real walls."}],"identifier":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Add-a-Color-Picker","kind":"section","type":"section","url":"\/tutorials\/remodelar\/remodelarsetupswiftui#Add-a-Color-Picker"},"swiftui-image-13.png":{"alt":"A screenshot from the Xcode preview as it would appear on iPhone. The view will show the color picker.","type":"image","identifier":"swiftui-image-13.png","variants":[{"url":"\/images\/swiftui-image-13.png","size":{"width":486,"height":984},"traits":["1x","light"]}]},"doc://com.passio.RemodelAR/tutorials/RemodelAR/RemodelARSetupSwiftUI#Create-a-new-project-and-add-RemodelAR.xcframework":{"role":"pseudoSymbol","title":"Create a new project and add RemodelAR.xcframework","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Painty"}]},{"type":"text","text":" — an app for visualizing paint on real walls."}],"identifier":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelAR\/RemodelARSetupSwiftUI#Create-a-new-project-and-add-RemodelAR.xcframework","kind":"section","type":"section","url":"\/tutorials\/remodelar\/remodelarsetupswiftui#Create-a-new-project-and-add-RemodelAR.xcframework"},"doc://com.passio.RemodelAR/tutorials/RemodelARSwiftUI/RemodelAR-Essentials":{"role":"article","title":"RemodelAR Essentials","abstract":[],"identifier":"doc:\/\/com.passio.RemodelAR\/tutorials\/RemodelARSwiftUI\/RemodelAR-Essentials","kind":"article","type":"topic","url":"\/tutorials\/remodelarswiftui\/remodelar-essentials"},"swiftui-image-2.png":{"alt":"A screenshot of the project sheet, which shows the Product Name for the app being built as Painty. The Interface is set to SwiftUI, and the Life Cycle is set to SwiftUI App.","type":"image","identifier":"swiftui-image-2.png","variants":[{"url":"\/images\/swiftui-image-2.png","size":{"width":732,"height":522},"traits":["1x","light"]}]},"Painty-SwiftUI-Banner.png":{"alt":"A final screenshot of the basic RemodelAR implementation.","type":"image","identifier":"Painty-SwiftUI-Banner.png","variants":[{"url":"\/images\/Painty-SwiftUI-Banner.png","size":{"width":1467,"height":809},"traits":["1x","light"]}]},"swiftui-code-23.swift":{"syntax":"swift","content":["\/\/","\/\/  ContentView.swift","\/\/  Painty","\/\/","\/\/  Copyright © 2021 Passio Inc. All rights reserved.","\/\/","","import RemodelAR","import SwiftUI","","struct ContentView: View {","    @ObservedObject var model = ARStateModel()","    ","    @State private var colorIndex = 0","    @State private var showStroke = true","    @State private var textureIndex = -1","    @State private var showTextureStroke = false","","    var body: some View {","        ZStack {","            ZStack(alignment: .bottom, content: {","                arView","                    .edgesIgnoringSafeArea(.all)","                VStack {","                    Spacer()","                    HStack {","                        savePhotoButton","                        save3DModelButton","                        resetSceneButton","                    }","                    colorPicker","                }.padding(.bottom, 30)","            })","        }","        .onAppear {","            model.pickColor(paint: colorItems[0])","        }","    }","}","","private extension ContentView {","    var arView: ARView {","        RemodelARLib.makeARView(model: model, arMethod: .Lidar)","    }","","    var colorItems: [WallPaint] {","        let numHues = 20","        var colors = [WallPaint]()","        for i in 0..<numHues {","            let color_8_8 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.8)","            let color_8_6 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.6)","            let color_8_4 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.4)","            let color_8_2 = Color(hue: Double(i)\/Double(numHues),","                                  saturation: 0.8,","                                  brightness: 0.2)","            ","            colors.append(WallPaint(id: \"\\(i * 4 + 1)\", color: color_8_8.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 2)\", color: color_8_6.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 3)\", color: color_8_4.uiColor()))","            colors.append(WallPaint(id: \"\\(i * 4 + 4)\", color: color_8_2.uiColor()))","        }","        return colors","    }","","    var colorPicker: some View {","        ScrollView(.horizontal) {","            HStack {","                ForEach(0..<colorItems.count) { i in","                    Button(action: {","                        showStroke = true","                        colorIndex = i","                        model.pickColor(paint: colorItems[i])","                    }) {","                        RoundedRectangle(cornerRadius: 17)","                            .strokeBorder(lineWidth: (showStroke && i == colorIndex) ? 5 : 0)","                            .foregroundColor(.white)","                            .background(Color(colorItems[i].color))","                            .clipShape(RoundedRectangle(cornerRadius: 17))","                            .frame(width: 74, height: 74)","                            .animation(Animation.interpolatingSpring(stiffness: 60, damping: 15))","                    }","                    .onTapGesture {","                        self.showStroke = true","                    }","                }","            }","            .padding()","        }","    }","}","","private extension ContentView {","    var savePhotoButton: some View {","        Button(action: {","            model.sharePhoto()","        }, label: {","            Image(systemName: \"camera.fill\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","","    var save3DModelButton: some View {","        Button(action: {","            model.save3DModel()","        }, label: {","            Image(\"saveMesh\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","    ","    var resetSceneButton: some View {","        Button(action: {","            model.resetScene()","        }, label: {","            Image(\"reset\")","                .foregroundColor(.white)","        })","        .padding()","        .background(Color(.sRGB, white: 0, opacity: 0.15))","        .cornerRadius(10)","    }","}","","private extension ContentView {","    var textureNames: [String] {","        [","            \"chalk\",","            \"concrete\",","            \"concreteLines\",","            \"corium\",","            \"ebdaa\",","            \"elora\",","            \"glostex\",","            \"graniteArenal\",","            \"khayalBeauty010\",","            \"linetex\",","            \"marmo\",","            \"marotex\",","            \"mashasco\",","            \"newtex\",","            \"rawa\",","            \"rawaKothban\",","            \"said\",","            \"texture\",","            \"tourmaline\",","            \"worood\"","        ]","    }","    ","    var textureImages: [UIImage] {","        textureNames.compactMap({ UIImage(named: $0) })","    }","}","","struct ContentView_Previews: PreviewProvider {","    static var previews: some View {","        ContentView()","    }","}"],"fileName":"ContentView.swift","identifier":"swiftui-code-23.swift","type":"file","fileType":"swift","highlights":[{"line":136},{"line":137},{"line":138},{"line":139},{"line":140},{"line":141},{"line":142},{"line":143},{"line":144},{"line":145},{"line":146},{"line":147},{"line":148},{"line":149},{"line":150},{"line":151},{"line":152},{"line":153},{"line":154},{"line":155},{"line":156},{"line":157},{"line":158},{"line":159},{"line":160},{"line":161},{"line":162},{"line":163},{"line":164},{"line":165},{"line":166}]}}}